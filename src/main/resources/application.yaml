micronaut:
  heartbeat:
    enabled: true
  metrics:
    enabled: ${METRICS_ENABLED:True}
    export:
      prometheus:
        enabled: true
        descriptions: true
        step: PT1M
#  security:
#    enabled: false
#    authentication: idtoken
#    endpoints:
#      logout:
#        get-allowed: true
#    redirect:
#      login-success: /whoiam
#    oauth2:
#      clients:
#        google:
#          client-id: '${OAUTH_CLIENT_ID}'
#          client-secret: '${OAUTH_CLIENT_SECRET}'
#          openid:
#            issuer: 'https://accounts.google.com'
#        cognito:
#          client-id: '${OAUTH_CLIENT_ID}'
#          client-secret: '${OAUTH_CLIENT_SECRET}'
#          openid:
#            issuer: 'https://cognito-idp.${COGNITO_REGION}.amazonaws.com/${COGNITO_POOL_ID}/'
#         okta:
#           client-secret: '${OAUTH_CLIENT_SECRET}'
#           client-id: '${OAUTH_CLIENT_ID}'
#            openid:
#              issuer: '${OIDC_ISSUER_DOMAIN}/oauth2/${OIDC_ISSUER_AUTHSERVERID}'
#    authentication: bearer
#    token:
#      jwt:
#        signatures:
#          secret:
#            generator:
#              secret: '"${JWT_GENERATOR_SIGNATURE_SECRET:pleaseChangeThisSecretForANewOne}"'
  server:
    port: ${APPLICATION_SERVER_PORT:7080}
  application:
    name: "webrtc-observer"
#  ssl:
#    enabled: true
#    buildSelfSigned: true
---
endpoints:
  all:
    port: ${APPLICATION_MANAGEMENT_PORT:7081}
  prometheus:
    enabled: true
    sensitive: false
  health:
    enabled: true
    sensitive: false
  logout:
    get-allowed: true
---
#failsafeStore:
#  - repositories:
#      - "services"
#      - "sentinels"
#      - "calls"
#    invoked: "Always / Never / OnStartup / OnShutdown / OnStartupShutdown"
#    engine: "MountedVolume"
#    engineConfig:
#      path: "myPath"
---
observer:
  sources:
    pcSamples:
      enabled: true
      defaultServiceName: "defaultServiceName"
      security:
        dropUnknownServices: False

  security:
    dropUnknownServices: False

  sentinelsCheckingPeriodInMin: 1
#  pcFilters:
#    - name: "myServerFilter"
#      remoteIPs:
#        anyMatch:
#          - "10.10.10.10"
#      SSRCs:
#        gt: 0
#        lt: 10
#  callFilters:
#    - name: "MyPeerToPeerFilter"
#      serviceName: "example-service-name"
#      callName: "regex pattern"
#      marker: "regex pattern"
#      browserIds:
#        gt: 0
#        lt: 3
#  sentinels:
#    - name: "MySentinel"
#      expose: True
#      reports: True
#      pcFilters:
#        anyMatch:
#          - "myServerFilter"
#      callFilters:
#        anyMatch:
#          - "MyPeerToPeerFilter"
#  servicemappings:
#    - name: "example-service-name"
#      uuids:
#        - "aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee"
  connectors:
    - name: "ReportSinkLogger"
#      encoder:
#        type: BsonEncoder
#        type: JsonEncoder
#        type: AvroEncoder
#        format: OBJECT
##        format: BYTES
#        config:
#          addMetaKey: True
      buffer:
        maxItems: 100
        maxWaitingTimeInS: 10
      sink:
#        type: MongoSink
#        config:
#          URI: "mongodb://root:password@localhost:27017"
#          database: "myDb"
        type: LoggerSink
        config:
          printReports: False

    - name: "ReportSinkLogger"
      buffer:
        maxItems: 100
        maxWaitingTimeInS: 10
      sink:
        type: LoggerSink
        config:
          printReports: False
  ipAddressConverter:
    enabled: False
    algorithm: SHA-256
    salt: "MySalt"

#  inboundRtpMonitor:
#    enabled: True
#    retentionTimeInS: 300
#
#  remoteInboundRtpMonitor:
#    enabled: True
#    retentionTimeInS: 300
#    weightFactor: 0.3
#
#  outboundRtpMonitor:
#    enabled: True
#    retentionTimeInS: 300

  reportMonitor:
    enabled: true
    tagByServiceName: true
    tagByServiceUUID: false
    tagByType: false

  userMediaErrorsMonitor:
    enabled: true
    tagByServiceName: true
    tagByServiceUUID: false

  evaluators:
    impairablePCsCallName: "impairable-peer-connections-default-call-name"
    observedPCSBufferMaxTimeInS: 10
    observedPCSBufferMaxItemNums: 10000
    peerConnectionMaxIdleTimeInS: 60

  outboundReports:
    reportOutboundRTPs: True
    reportInboundRTPs: True
    reportRemoteInboundRTPs: True
    reportTracks: True
    reportMediaSources: True
    reportCandidatePairs: True
    reportLocalCandidates: True
    reportRemoteCandidates: True
    reportUserMediaErrors: True
  hazelcast:
    configFile: ${HAZELCAST_CONFIG_FILE:`classpath:hazelcast.yaml`}