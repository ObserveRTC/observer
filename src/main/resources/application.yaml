micronaut:
  heartbeat:
    enabled: true
  metrics:
    enabled: ${METRICS_ENABLED:True}
    export:
      prometheus:
        enabled: true
        descriptions: true
        step: PT1M
  security:
    enabled: false
    authentication: bearer
    token:
      jwt:
        signatures:
          secret:
            generator:
              secret: '"${JWT_GENERATOR_SIGNATURE_SECRET:pleaseChangeThisSecretForANewOne}"'
  server:
    port: ${APPLICATION_SERVER_PORT:7080}
  application:
    name: "webrtc-observer"
#  ssl:
#    enabled: true
#    buildSelfSigned: true
---
endpoints:
  all:
    port: ${APPLICATION_MANAGEMENT_PORT:7081}
  prometheus:
    enabled: true
    sensitive: false
  health:
    enabled: true
    sensitive: false
---
kafka:
  bootstrap:
    servers: ${KAFKA_HOSTS:`localhost:9092`}
---
failsafeStore:
  - repositories:
      - "services"
      - "sentinels"
      - "calls"
    invoked: "Always / Never / OnStartup / OnShutdown / OnStartupShutdown"
    engine: "MountedVolume"
    engineConfig:
      path: "myPath"

---
filters:
  - type: "CallFilter"
    filterName: "myCallFilterName"
    config:
      serviceName: "required"
      callName: "regex pattern"
      marker: "regex pattern"

---
observer:
  security:
    dropUnknownServices: False

  sentinelInvasionPeriodInMin: 1
  sentinelFilters:
    - name: "MyPeerToPeerFilter"
      serviceName: "example-service-name"
#      callName: "regex pattern"
#      marker: "regex pattern"
      browserIds:
        gt: 0
        lt: 3
  sentinels:
    - name: "MySentinel"
      expose: True
      reports: True
      streamMetrics: True
      anyMatchFilters:
        - "MyPeerToPeerFilter"
        
  connectors:
    - name: "ReportSinkLogger"
      buffer:
        maxItems: 100
        maxWaitingTimeInS: 10
      sink:
        type: LoggerSink
        config:
          printReports: False
  services:
    - name: "example-service-name"
      uuids:
        - "aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee"
  ipAddressConverter:
    enabled: False
  monitors:
    callsMonitor:
      enabled: true
      reportPeriodInS: 300
  hazelcast:
    configFile: ${HAZELCAST_CONFIG_FILE:`classpath:hazelcast.yaml`}
  evaluators:
    impairablePCsCallName: "impairable-peer-connections-default-call-name"
    observedPCSBufferMaxTimeInS: 10
    observedPCSBufferMaxItemNums: 10000
    peerConnectionMaxIdleTimeInS: 15
    reportMonitor:
      enabled: true
      tagByServiceName: true
      tagByServiceUUID: false
      tagByType: false
    pcObserver:
      peerConnectionMaxIdleTimeInS: 300
      mediaStreamUpdatesFlushInS: 15
      mediaStreamsBufferNums: 0
  outboundReports:
    reportOutboundRTPs: True
    reportInboundRTPs: True
    reportRemoteInboundRTPs: True
    reportTracks: True
    reportMediaSources: True
    reportCandidatePairs: True
    reportLocalCandidates: True
    reportRemoteCandidates: True
    reportUserMediaErrors: True

