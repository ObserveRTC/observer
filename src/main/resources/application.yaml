micronaut:
  server:
    port: ${APPLICATION_SERVER_PORT:7080}
    application:
      name: "webrtc-observer"
  heartbeat:
    enabled: true
  metrics:
    enabled: ${METRICS_ENABLED:True}
    export:
      prometheus:
        enabled: true
        descriptions: true
        step: PT1M
  security:
    enabled: true
    authentication: idtoken
    token:
      jwt:
        enabled: true
        signatures.jwks.keycloak:
          url: http://localhost:8080/auth/realms/master/protocol/openid-connect/certs
    oauth2.clients.keycloak:
      client-id: client
      client-secret: 4f0b4210-a183-460f-875b-4f949b1fb44b
      openid:
        issuer: http://localhost:8080/auth/realms/master
---
endpoints:
  all:
    port: ${APPLICATION_MANAGEMENT_PORT:7081}
  prometheus:
    enabled: true
    sensitive: false
  health:
    enabled: true
    sensitive: false
  logout:
    get-allowed: true
---
observer:
  sources:
    pcSamples:
      enabled: true
      defaultServiceName: "defaultServiceName"
      security:
        dropUnknownServices: false

  security:
    websockets:
      invalidAccessTokensCacheExpirationInS: 3600
      accessTokensRevalidationPeriodInS: 3600
    ipAddressConverter:
      enabled: False
      algorithm: SHA-256
      salt: "MySalt"

  sentinelsCheckingPeriodInMin: 1
  connectors:
    - name: "ReportSinkLogger"
      buffer:
        maxItems: 100
        maxWaitingTimeInS: 10
      sink:
        type: LoggerSink
        config:
          printReports: false

  reportMonitor:
    enabled: true
    tagByServiceName: true
    tagByServiceUUID: false
    tagByType: false

  userMediaErrorsMonitor:
    enabled: true
    tagByServiceName: true
    tagByServiceUUID: false

  evaluators:
    impairablePCsCallName: "impairable-peer-connections-default-call-name"
    observedPCSBufferMaxTimeInS: 10
    observedPCSBufferMaxItemNums: 10000
    peerConnectionMaxIdleTimeInS: 60

  outboundReports:
    reportOutboundRTPs: true
    reportInboundRTPs: true
    reportRemoteInboundRTPs: true
    reportTracks: true
    reportMediaSources: true
    reportCandidatePairs: true
    reportLocalCandidates: true
    reportRemoteCandidates: true
    reportUserMediaErrors: true
  hazelcast:
    configFile: ${HAZELCAST_CONFIG_FILE:`classpath:hazelcast.yaml`}